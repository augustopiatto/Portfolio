name: Node.js CI

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci
      
      - name: Build
        run: npm run build --if-present

  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test

  # deployment:
  #   needs: tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Access by SSH
  #       env:
  #         SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
  #         REMOTE_HOST: ${{secrets.REMOTE_HOST}}
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "$SSH_PRIVATE_KEY" > ~/.ssh/deployment-key
  #         chmod 600 ~/.ssh/deployment-key
  #         ssh -i ~/.ssh/deployment-key -t -o StrictHostKeyChecking=no -v root@$REMOTE_HOST "
  #           git clone https://github.com/augustopiatto/Portfolio.git
  #           cd Portfolio
  #           apt-get update
  #           apt-get install npm
  #           npm install
  #           ls -la
  #         "

  deployment:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          REMOTE_HOST: ${{secrets.REMOTE_HOST}}
          REMOTE_USER: ${{secrets.REMOTE_USER}}
        with:
            SSH_PRIVATE_KEY: ~/.ssh/deployment-key
            ARGS: "-rlgoDzvc -i --delete"
            SOURCE: "src/"
            REMOTE_HOST: $REMOTE_HOST
            REMOTE_USER: $REMOTE_USER
            EXCLUDE: "/dist/, /node_modules/"
            SCRIPT_BEFORE: |
              mkdir -p ~/.ssh
              echo "$SSH_PRIVATE_KEY" > ~/.ssh/deployment-key
              chmod 600 ~/.ssh/deployment-key
